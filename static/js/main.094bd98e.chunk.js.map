{"version":3,"sources":["images/logo.png","comp/Header.js","comp/CharacterGrid.js","comp/Serach.js","comp/Navbar.js","comp/Episodes.js","comp/Deaths.js","comp/Quotes.js","comp/Character.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterGrid","isLoading","items","sm","useMediaQuery","md","lg","span","size","color","map","character","shadow","padding","img","position","to","char_id","weight","style","marginTop","name","Serach","getQuery","useState","inputVal","setInputVal","placeholder","radius","value","onChange","e","target","icon","withRouter","leftIcon","variant","Episodes","episodes","setEpisodes","setIsLoading","useEffect","a","axios","result","data","console","log","fetchItem","grow","id","sName","sNumber","tab","label","paddingTop","width","season","filter","ep","paddingBottom","title","air_date","wrapLines","withArrow","transition","transitionDuration","characters","char","compact","episode_id","Deaths","deaths","setDeaths","item","align","death","cause","responsible","fontSize","marginRight","order","episode","last_words","Quotes","quotes","setQuotes","randomId","Math","floor","random","length","cite","author","quote","onClick","Character","params","useParams","setCharacter","birthday","nickname","display","gap","status","occupation","App","setCharacters","query","setQuery","exact","path","q","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.094bd98e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from \"react\";\r\nimport logo from \"../images/logo.png\";\r\nfunction Header() {\r\n  return (\r\n    <header className=\"center\">\r\n      <img src={logo} alt=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardSection,\r\n  Center,\r\n  Col,\r\n  Grid,\r\n  Group,\r\n  Image,\r\n  Loader,\r\n  Text,\r\n} from \"@mantine/core\";\r\nimport { useMediaQuery } from \"@mantine/hooks\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction CharacterGrid({ isLoading, items }) {\r\n  const useBreakPoints = () => {\r\n    const sm = useMediaQuery(\"(max-width:510px)\");\r\n    const md = useMediaQuery(\"(max-width:730px)\");\r\n    const lg = useMediaQuery(\"(max-width:960px)\");\r\n    return { sm, md, lg };\r\n  };\r\n  const { sm, md, lg } = useBreakPoints();\r\n  const span = sm ? 12 : md ? 6 : lg ? 4 : 3;\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Center>\r\n          <Grid>\r\n            <Col span={12}>\r\n              <Loader size=\"xl\" color=\"green\"></Loader>\r\n            </Col>\r\n          </Grid>\r\n        </Center>\r\n      ) : (\r\n        <Grid>\r\n          {items.map((character) => {\r\n            return (\r\n              <Col span={span} key={character.char_id} className=\"actor-box\">\r\n                <Card shadow=\"sm\" padding=\"md\">\r\n                  <CardSection>\r\n                    <Image src={character.img} className=\"actor-img\" />\r\n                  </CardSection>\r\n                  <Group position=\"apart\">\r\n                    <NavLink to={\"/character/\" + character.char_id}>\r\n                      <Text\r\n                        weight=\"500\"\r\n                        size=\"lg\"\r\n                        style={{ marginTop: \"15px\" }}\r\n                      >\r\n                        {character.name}\r\n                      </Text>\r\n                    </NavLink>\r\n                  </Group>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterGrid;\r\n","import { Input } from \"@mantine/core\";\r\nimport React, { useState } from \"react\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nfunction Serach({ getQuery }) {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const hundelInput = (e) => {\r\n    setInputVal(e.target.value);\r\n    getQuery(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"searchInput\">\r\n      <Input\r\n        placeholder=\"Search ...\"\r\n        size=\"md\"\r\n        radius={10}\r\n        value={inputVal}\r\n        onChange={hundelInput}\r\n        icon={<BiSearch className=\"SearchIcon\" />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Serach;\r\n","import { Group, Grid, Button, Center } from \"@mantine/core\";\r\nimport React from \"react\";\r\nimport { GoPerson } from \"react-icons/go\";\r\nimport { FiFilm } from \"react-icons/fi\";\r\nimport { BsFillChatQuoteFill } from \"react-icons/bs\";\r\nimport { GiDeathSkull } from \"react-icons/gi\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <Center>\r\n        <Grid>\r\n          <Group>\r\n            <NavLink to=\"/breakingBad\">\r\n              <Button\r\n                color=\"teal\"\r\n                leftIcon={<GoPerson />}\r\n                variant=\"filled\"\r\n                radius=\"md\"\r\n              >\r\n                Characters\r\n              </Button>\r\n            </NavLink>\r\n            <NavLink to=\"/episodes\">\r\n              <Button\r\n                color=\"teal\"\r\n                leftIcon={<FiFilm />}\r\n                variant=\"filled\"\r\n                radius=\"md\"\r\n              >\r\n                Episodes\r\n              </Button>\r\n            </NavLink>\r\n            <NavLink to=\"/quotes\">\r\n              <Button\r\n                color=\"teal\"\r\n                leftIcon={<BsFillChatQuoteFill />}\r\n                variant=\"filled\"\r\n                radius=\"md\"\r\n              >\r\n                Quote\r\n              </Button>\r\n            </NavLink>\r\n            <NavLink to=\"/deaths\">\r\n              <Button\r\n                color=\"teal\"\r\n                leftIcon={<GiDeathSkull />}\r\n                variant=\"filled\"\r\n                radius=\"md\"\r\n              >\r\n                Deaths\r\n              </Button>\r\n            </NavLink>\r\n          </Group>\r\n        </Grid>\r\n      </Center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import {\r\n  Card,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Col,\r\n  Text,\r\n  Badge,\r\n  Tooltip,\r\n  Loader,\r\n  Button,\r\n  Center,\r\n} from \"@mantine/core\";\r\nimport { useMediaQuery } from \"@mantine/hooks\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Episodes() {\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const result = await axios(`https://www.breakingbadapi.com/api/episodes`);\r\n      setEpisodes(result.data);\r\n      console.log(result.data[0]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchItem();\r\n  }, []);\r\n  const filterEp = (season) => {\r\n    return episodes.filter((ep) => ep.season === season);\r\n  };\r\n\r\n  const useBreakPoints = () => {\r\n    const sm = useMediaQuery(\"(max-width:510px)\");\r\n    const md = useMediaQuery(\"(max-width:730px)\");\r\n    const lg = useMediaQuery(\"(max-width:960px)\");\r\n    return { sm, md, lg };\r\n  };\r\n  const { sm, md, lg } = useBreakPoints();\r\n  const span = sm ? 12 : md ? 6 : lg ? 4 : 3;\r\n  const tabsInfo = [\r\n    { id: 1, sName: \"Season 1\", sNumber: \"1\" },\r\n    { id: 1, sName: \"Season 2\", sNumber: \"2\" },\r\n    { id: 1, sName: \"Season 3\", sNumber: \"3\" },\r\n    { id: 1, sName: \"Season 4\", sNumber: \"4\" },\r\n    { id: 1, sName: \"Season 5\", sNumber: \"5\" },\r\n  ];\r\n  return (\r\n    <div className=\"episodes\">\r\n      <Tabs grow variant=\"pills\">\r\n        {tabsInfo.map((tab) => {\r\n          return (\r\n            <Tab label={tab.sName} color=\"blue\">\r\n              <Grid>\r\n                {isLoading ? (\r\n                  <Center style={{ paddingTop: \"25px\", width: \"100%\" }}>\r\n                    <Grid>\r\n                      <Col span={12}>\r\n                        <Loader size=\"xl\" color=\"green\"></Loader>\r\n                      </Col>\r\n                    </Grid>\r\n                  </Center>\r\n                ) : (\r\n                  filterEp(tab.sNumber).map((ep) => {\r\n                    return (\r\n                      <Col key={ep.episode_id} span={span} className=\"epBox\">\r\n                        <Card className=\"epBox\">\r\n                          <Text weight={500} style={{ paddingBottom: \"15px\" }}>\r\n                            Title : {ep.title}{\" \"}\r\n                          </Text>\r\n                          <div className=\"air-date\">\r\n                            <Badge variant=\"dot\" color=\"red\">\r\n                              Air Date :{\" \"}\r\n                            </Badge>\r\n                            <Text> {ep.air_date} </Text>\r\n                          </div>\r\n                          <div>\r\n                            <Center style={{ paddingTop: \"15px\" }}>\r\n                              <Tooltip\r\n                                wrapLines\r\n                                width={200}\r\n                                withArrow\r\n                                transition=\"fade\"\r\n                                transitionDuration={500}\r\n                                label={ep.characters.map((char) => {\r\n                                  return <div> {char} </div>;\r\n                                })}\r\n                              >\r\n                                <Button compact color=\"teal\">\r\n                                  Characters\r\n                                </Button>\r\n                              </Tooltip>\r\n                            </Center>\r\n                          </div>\r\n                        </Card>\r\n                      </Col>\r\n                    );\r\n                  })\r\n                )}\r\n              </Grid>\r\n            </Tab>\r\n          );\r\n        })}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Episodes;\r\n","import {\r\n  Card,\r\n  Center,\r\n  Col,\r\n  Grid,\r\n  Title,\r\n  Text,\r\n  Badge,\r\n  Tooltip,\r\n  Button,\r\n  Loader,\r\n} from \"@mantine/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImFilm } from \"react-icons/im\";\r\nimport { GiFilmProjector } from \"react-icons/gi\";\r\nimport { useMediaQuery } from \"@mantine/hooks\";\r\n\r\nfunction Deaths() {\r\n  const [deaths, setDeaths] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const result = await axios(`https://www.breakingbadapi.com/api/deaths`);\r\n      setDeaths(result.data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchItem();\r\n  }, []);\r\n  const useBreakPoints = () => {\r\n    const sm = useMediaQuery(\"(max-width:510px)\");\r\n    const md = useMediaQuery(\"(max-width:730px)\");\r\n    const lg = useMediaQuery(\"(max-width:960px)\");\r\n    return { sm, md, lg };\r\n  };\r\n  const { sm, md, lg } = useBreakPoints();\r\n  const span = sm ? 12 : md ? 6 : lg ? 4 : 3;\r\n  return (\r\n    <div style={{ paddingTop: \"25px\" }}>\r\n      <Grid>\r\n        {isLoading ? (\r\n          <Center style={{ paddingTop: \"25px\", width: \"100%\" }}>\r\n            <Grid>\r\n              <Col span={12}>\r\n                <Loader size=\"xl\" color=\"green\"></Loader>\r\n              </Col>\r\n            </Grid>\r\n          </Center>\r\n        ) : (\r\n          deaths.map((item) => {\r\n            return (\r\n              <Col span={span}>\r\n                <Card className=\"deathItem\">\r\n                  <div>\r\n                    <Text\r\n                      weight={500}\r\n                      size=\"lg\"\r\n                      align=\"center\"\r\n                      style={{ paddingBottom: \"10px\" }}\r\n                    >\r\n                      {item.death}\r\n                    </Text>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      {\" \"}\r\n                      <Badge variant=\"filled\">cause :</Badge>\r\n                    </div>\r\n                    <span> {item.cause} </span>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      {\" \"}\r\n                      <Badge variant=\"filled\">Responsible :</Badge>\r\n                    </div>\r\n                    <span> {item.responsible} </span>\r\n                  </div>\r\n                  <div>\r\n                    <Grid style={{ paddingTop: \"10px\" }}>\r\n                      <Col span={6}>\r\n                        <Text weight=\"500\" size=\"lg\" align=\"center\">\r\n                          Season\r\n                        </Text>\r\n                        <Center>\r\n                          <GiFilmProjector\r\n                            style={{ fontSize: \"40px\", marginRight: \"5px\" }}\r\n                          />\r\n                          <Title order={2} align=\"center\">\r\n                            {\" \"}\r\n                            {item.season}{\" \"}\r\n                          </Title>\r\n                        </Center>{\" \"}\r\n                      </Col>\r\n                      <Col span={6}>\r\n                        <Text weight=\"500\" size=\"lg\" align=\"center\">\r\n                          Episode\r\n                        </Text>\r\n                        <Center>\r\n                          <ImFilm\r\n                            style={{ fontSize: \"40px\", marginRight: \"5px\" }}\r\n                          />\r\n                          <Title order={2}> {item.episode} </Title>\r\n                        </Center>\r\n                      </Col>\r\n                    </Grid>\r\n                  </div>\r\n                  <div style={{ paddingTop: \"5px\" }}>\r\n                    <Center>\r\n                      <Tooltip\r\n                        wrapLines\r\n                        width={200}\r\n                        withArrow\r\n                        transition=\"fade\"\r\n                        transitionDuration={500}\r\n                        label={item.last_words}\r\n                      >\r\n                        <Button compact color=\"teal\">\r\n                          Last Words\r\n                        </Button>\r\n                      </Tooltip>\r\n                    </Center>\r\n                  </div>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Deaths;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Blockquote, Button, Center, Grid, Col, Loader } from \"@mantine/core\";\r\n\r\nfunction Quotes() {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    fetchItem();\r\n  }, []);\r\n  const fetchItem = async () => {\r\n    const result = await axios(`https://www.breakingbadapi.com/api/quotes`);\r\n    let randomId = Math.floor(Math.random() * result.data.length);\r\n    setQuotes(result.data[randomId]);\r\n    setIsLoading(false);\r\n  };\r\n  const hundelChange = () => {\r\n    fetchItem();\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"30px\" }}>\r\n      {isLoading ? (\r\n        <Center style={{ paddingTop: \"25px\", width: \"100%\" }}>\r\n          <Grid>\r\n            <Col span={12}>\r\n              <Loader size=\"xl\" color=\"green\"></Loader>\r\n            </Col>\r\n          </Grid>\r\n        </Center>\r\n      ) : (\r\n        <div>\r\n          <Blockquote color=\"teal\" cite={quotes.author}>\r\n            {\" \"}\r\n            {quotes.quote}{\" \"}\r\n          </Blockquote>\r\n          <Button\r\n            onClick={hundelChange}\r\n            color=\"teal\"\r\n            style={{ marginTop: \"15px\" }}\r\n          >\r\n            Get New Quote\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quotes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  Col,\r\n  Image,\r\n  Card,\r\n  Center,\r\n  Title,\r\n  Loader,\r\n  Badge,\r\n  Text,\r\n  Alert,\r\n  Button,\r\n} from \"@mantine/core\";\r\nimport { useMediaQuery } from \"@mantine/hooks\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\nfunction Character() {\r\n  const params = useParams();\r\n  /* */\r\n  const [character, setCharacter] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const result = await axios(\r\n        `https://www.breakingbadapi.com/api/characters/${params.id}`\r\n      );\r\n      setCharacter(result.data[0]);\r\n      console.log(result.data[0]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchItem();\r\n  }, [params.id]);\r\n  const useBreakPoints = () => {\r\n    const sm = useMediaQuery(\"(max-width:670px)\");\r\n    return { sm };\r\n  };\r\n  const { sm } = useBreakPoints();\r\n  const span = sm ? 12 : 6;\r\n  return (\r\n    <div style={{ padding: \"30px 0\" }}>\r\n      {!isLoading ? (\r\n        <Card>\r\n          <Grid>\r\n            <Col span={12}>\r\n              <NavLink to=\"/\">\r\n                <Button\r\n                  radius=\"lg\"\r\n                  color=\"teal\"\r\n                  leftIcon={<AiOutlineArrowLeft />}\r\n                >\r\n                  {\" \"}\r\n                  Back To Home Page{\" \"}\r\n                </Button>\r\n              </NavLink>\r\n            </Col>\r\n            <Col span={span}>\r\n              <Image src={character.img} />\r\n            </Col>\r\n            <Col span={span}>\r\n              <Title order={2} weight={500}>\r\n                {\" \"}\r\n                Name : {character.name}\r\n              </Title>\r\n              <Title order={2} weight={500}>\r\n                {\" \"}\r\n                Birthday : {character.birthday}\r\n              </Title>\r\n              <Title order={2} weight={500}>\r\n                {\" \"}\r\n                Nickname : {character.nickname}\r\n              </Title>\r\n\r\n              <div style={{ display: \"flex\", gap: \"10px\", padding: \"10px 0\" }}>\r\n                <Badge color=\"teal\" size=\"lg\">\r\n                  Status\r\n                </Badge>\r\n                <Text variant=\"text\" weight={600} size=\"lg\">\r\n                  {character.status}\r\n                </Text>\r\n              </div>\r\n              <div>\r\n                <Alert title=\"Occupation\" color=\"teal\" shadow=\"sm\">\r\n                  {character.occupation.map((item) => {\r\n                    return <Text size=\"lg\"> {item} </Text>;\r\n                  })}\r\n                </Alert>\r\n              </div>\r\n            </Col>\r\n          </Grid>\r\n        </Card>\r\n      ) : (\r\n        <Center style={{ paddingTop: \"25px\", width: \"100%\" }}>\r\n          <Grid>\r\n            <Col span={12}>\r\n              <Loader size=\"xl\" color=\"green\"></Loader>\r\n            </Col>\r\n          </Grid>\r\n        </Center>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","import { Container } from \"@mantine/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./comp/Header\";\nimport axios from \"axios\";\nimport CharacterGrid from \"./comp/CharacterGrid\";\nimport Serach from \"./comp/Serach\";\nimport Navbar from \"./comp/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Episodes from \"./comp/Episodes\";\nimport Deaths from \"./comp/Deaths\";\nimport Quotes from \"./comp/Quotes\";\nimport Character from \"./comp/Character\";\nexport default function App() {\n  const [characters, setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(\n        `https://breakingbadapi.com/api/characters?name=${query}`\n      );\n      setCharacters(result.data);\n      setIsLoading(false);\n    };\n    fetchItem();\n  }, [query]);\n  return (\n    <div>\n      <Container>\n        <Header />\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/breakingBad\">\n              <Serach getQuery={(q) => setQuery(q)} />\n              <CharacterGrid isLoading={isLoading} items={characters} />\n            </Route>\n            <Route exact path=\"/character/:id\">\n              <Character />\n            </Route>\n            <Route exact path=\"/episodes\">\n              <Episodes />\n            </Route>\n            <Route exact path=\"/deaths\">\n              <Deaths />\n            </Route>\n            <Route exact path=\"/quotes\">\n              <Quotes />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}